{"version":3,"sources":["components/Search.js","components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","useState","searchValue","setSearchValue","className","type","value","onChange","e","target","onClick","preventDefault","search","Movie","movie","poster","Poster","src","alt","Title","Year","App","loading","setLoading","movies","setMovies","error","setError","useEffect","fetch","then","response","json","jsonResponse","movieList","map","loadingMsg","errorMsg","Response","Error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA8BeA,EA5BA,SAACC,GAAW,IAAD,EACcC,mBAAS,IADvB,mBACjBC,EADiB,KACJC,EADI,KAaxB,OACE,qBAAKC,UAAU,mBAAf,SACE,uBAAMA,UAAU,cAAhB,UACE,uBAAOC,KAAK,OAAOC,MAAOJ,EAAaK,SAbxB,SAACC,GACpBL,EAAeK,EAAEC,OAAOH,UAapB,uBACEF,UAAU,MACVC,KAAK,SACLC,MAAM,SACNI,QAda,SAACF,GACpBA,EAAEG,iBACFX,EAAMY,OAAOV,GACbC,EAAe,aCKJU,EAZD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACTC,EAA0B,QAAjBD,EAAME,OAHrB,qGAG+DF,EAAME,OAErE,OACE,sBAAKZ,UAAU,QAAf,UACE,qBAAKa,IAAKF,EAAQG,IAAG,4BAAuBJ,EAAMK,SAClD,6BAAKL,EAAMK,QACX,kCAAKL,EAAMM,KAAX,W,MCkDSC,MAvDf,WAAgB,IAAD,EACiBpB,oBAAS,GAD1B,mBACNqB,EADM,KACGC,EADH,OAEetB,mBAAS,IAFxB,mBAENuB,EAFM,KAEEC,EAFF,OAGaxB,mBAAS,MAHtB,mBAGNyB,EAHM,KAGCC,EAHD,KAKbC,qBAAU,WACRC,MARc,gDASXC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLR,EAAUQ,EAAalC,QACvBwB,GAAW,QAEd,IAEH,IAgBMW,EAAYV,EAAOW,KAAI,SAACrB,GAAD,OAC3B,cAAC,EAAD,CAA4CA,MAAOA,GAAnD,UAAeA,EAAMM,KAArB,YAA6BN,EAAMK,WAG/BiB,EAAa,8CAEbC,EAAW,+BAAOX,IAExB,OACE,sBAAKtB,UAAU,YAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,2DAGF,cAAC,EAAD,CAAQQ,OA9BG,SAACV,GACdqB,GAAW,GACXI,EAAS,MACTE,MAAM,6BAAD,OAA8B3B,EAA9B,oBACF4B,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACyB,SAA1BA,EAAaK,UACfb,EAAUQ,EAAalC,QACvBwB,GAAW,KAEXI,EAASM,EAAaM,OACtBhB,GAAW,UAqBf,mBAAGnB,UAAU,GAAb,mDAEA,qBAAKA,UAAU,kBAAf,SACGkB,IAAYI,EAAQU,EAAaV,EAAQW,EAAWH,QC5C9CM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.13d8d9bd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Search = (props) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setSearchValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    props.search(searchValue);\r\n    setSearchValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-container\">\r\n      <form className=\"search-form\">\r\n        <input type=\"text\" value={searchValue} onChange={handleChange} />\r\n        <input\r\n          className=\"btn\"\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nconst DEFAULT_MOVIE_POSTER =\r\n  \"https://m.media-amazon.com/images/M/MV5BMTczNTI2ODUwOF5BMl5BanBnXkFtZTcwMTU0NTIzMw@@._V1_SX300.jpg\";\r\n\r\nconst Movie = ({ movie }) => {\r\n  const poster = movie.Poster === \"N/A\" ? DEFAULT_MOVIE_POSTER : movie.Poster;\r\n\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={`The movie titled: ${movie.Title}`} />\r\n      <h2>{movie.Title}</h2>\r\n      <p>({movie.Year})</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Movie;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Search from \"./components/Search\";\r\nimport Movie from \"./components/Movie\";\r\nimport \"./App.css\";\r\n\r\nconst MOVIE_API = \"http://www.omdbapi.com/?s=man&apikey=15d31ea\";\r\n\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [movies, setMovies] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(MOVIE_API)\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        setMovies(jsonResponse.Search);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  const search = (searchValue) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    fetch(`http://www.omdbapi.com/?s=${searchValue}&apikey=15d31ea`)\r\n      .then((response) => response.json())\r\n      .then((jsonResponse) => {\r\n        if (jsonResponse.Response === \"True\") {\r\n          setMovies(jsonResponse.Search);\r\n          setLoading(false);\r\n        } else {\r\n          setError(jsonResponse.Error);\r\n          setLoading(false);\r\n        }\r\n      });\r\n  };\r\n\r\n  const movieList = movies.map((movie) => (\r\n    <Movie key={`${movie.Year}-${movie.Title}`} movie={movie} />\r\n  ));\r\n\r\n  const loadingMsg = <span>Loading...</span>;\r\n\r\n  const errorMsg = <span>{error}</span>;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header-container\">\r\n        <h1>Movie Database Searcher</h1>\r\n      </div>\r\n\r\n      <Search search={search} />\r\n\r\n      <p className=\"\">Sharing a few of our favourite movies</p>\r\n\r\n      <div className=\"movie-container\">\r\n        {loading && !error ? loadingMsg : error ? errorMsg : movieList}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}